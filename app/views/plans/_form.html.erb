<%= form_with(model: @plan, local: true) do |f| %>
 <%= render 'shared/error_messages_plan', object: @plan %>
 <div class="col-md-6">
<div id='gmap'></div>
<!-- 地名入力用のinputを追加 -->
<!-- <input id="address" type="textbox" value="Sydney, NSW" onChange="codeAddress()">　-->

<!-- buttonをクリックしたらcodeAddressを実行　-->
<!--<input type="button" value="Encode" onclick="codeAddress()">　-->

<style>
#gmap{
  height: 400px;
}
</style>
 <div>不使用</div>
 <div>
    <input  name="plan[avoidferries]" type="hidden" value="0" />
    <% if @plan.avoidferries %>
      <input id="avoidferries" type="checkbox" value="1" checked="checked" name="plan[avoidferries]" onChange="initMap()" />
    <% else %>
      <input id="avoidferries" type="checkbox" value="1" name="plan[avoidferries]" onChange="initMap()" />
    <% end %>
    <%= f.label:avoidferries, class: "label-#{yield(:class_text)}" %>
  </div>
  <div>
    <input name="plan[avoidhighways]" type="hidden" value="0" />
    <% if @plan.avoidhighways %>
      <input id="avoidhighways" type="checkbox" value="1" checked="checked" name="plan[avoidhighways]" onChange="initMap()" />
    <% else %>
      <input id="avoidhighways" type="checkbox" value="1" name="plan[avoidhighways]" onChange="initMap()" />
    <% end %>
    <%= f.label:avoidhighways, class: "label-#{yield(:class_text)}" %>
  </div>
  <div>
    <input name="plan[avoidtolls]" type="hidden" value="0" />
    <% if @plan.avoidtolls %>
      <input id="avoidtolls" type="checkbox" value="1" checked="checked" name="plan[avoidtolls]" onChange="initMap()" />
    <% else %>
      <input id="avoidtolls" type="checkbox" value="1" name="plan[avoidtolls]" onChange="initMap()" />
    <% end %>
    <%= f.label:avoidtolls, class: "label-#{yield(:class_text)}" %>
  </div>
</div>

<div class="col-md-6">
  <%= image_tag @plan.picture,:style =>'width: 100%; height: auto;' %>
  <span class="picture">
    <%= f.file_field :picture, accept: 'image/jpeg,image/gif,image/png'  %>
  </span>

  <%= f.label :purpose, class: "label-#{yield(:class_text)}" %>
  <%= f.text_field :purpose, class: "form-control" %>
  
  <%= f.label :overview, class: "label-#{yield(:class_text)}" %>
  <%= f.text_area :overview, size: "10x10", class: "form-control" %>

  <%= f.label :meetdate, class: "label-#{yield(:class_text)}" %>
  <%= f.datetime_field :meetdate, class: "form-control" %>
  
  <%= f.label :finish_date, class: "label-#{yield(:class_text)}" %>
  <%= f.datetime_field :finish_date, class: "form-control" %>
  
  <%= f.label :meeting_place, class: "label-#{yield(:class_text)}"%>
  <input id="address1" type="textbox" onChange="initMap()" class="form-control" name="plan[meeting_place]" value=<%=@plan.meeting_place%>>
  
  <%= f.label:passing_point1, class: "label-#{yield(:class_text)}" %>
  <input id="address2" type="textbox" onChange="initMap()" class="form-control" name="plan[passing_point1]" value=<%=@plan.passing_point1%>>

  <%= f.label:passing_point2, class: "label-#{yield(:class_text)}" %>
  <input id="address3" type="textbox" onChange="initMap()" class="form-control" name="plan[passing_point2]" value=<%=@plan.passing_point2%>>
  
  <%= f.label:passing_point3, class: "label-#{yield(:class_text)}" %>
  <input id="address4" type="textbox" onChange="initMap()" class="form-control" name="plan[passing_point3]" value=<%=@plan.passing_point3%>>
  
  <%= f.label:passing_point4, class: "label-#{yield(:class_text)}" %>
  <input id="address5" type="textbox" onChange="initMap()"class="form-control" name="plan[passing_point4]" value=<%=@plan.passing_point4%>>
  
  <%= f.label:passing_point5, class: "label-#{yield(:class_text)}" %>
  <input id="address6" type="textbox" onChange="initMap()" class="form-control" name="plan[passing_point5]" value=<%=@plan.passing_point5%>>
  
  <%= f.label:destination, class: "label-#{yield(:class_text)}" %>
  <input id="address7" type="textbox" onChange="initMap()" class="form-control" name="plan[destination]" value=<%=@plan.destination%>>
  
  <%= f.label :deadline_date, class: "label-#{yield(:class_text)}" %>
  <%= f.datetime_field :deadline_date, class: "form-control" %>
  
  <%= f.label :caution, class: "label-#{yield(:class_text)}" %>
  <%= f.text_area :caution, size: "10x10", class: "form-control" %>
  
  <%= f.label :contact, class: "label-#{yield(:class_text)}" %>
  <%= f.text_field :contact, class: "form-control" %>
  
  <%= f.hidden_field :secretary_id, :value => current_user.id%>

  <%= f.submit yield(:button_text), class: "btn btn-primary btn-block btn-#{yield(:class_text)}" %>
<% end %>
</div>

<script type="text/javascript">
  $('#plan_picture').bind('change', function() {
    var size_in_megabytes = this.files[0].size/1024/1024;
    if (size_in_megabytes > 5) {
      alert('Maximum file size is 5MB. Please choose a smaller file.');
    }
  });
</script>

<script>
function initMap() { 
  // 地図を生成して表示
  var map = new google.maps.Map(document.getElementById("gmap"), {
    zoom: 13,
    center:{lat: 35.710033, lng: 139.810716 },
    mapTypeId: "roadmap"
  });
  
  var waypts = [];
  var address2 = document.getElementById('address2');
  if (address2.value !=""){
    waypts.push({
          location: address2.value,
          stopover: false
    })
  };
  
  var address3 = document.getElementById('address3');
  if (address3.value !=""){
    waypts.push({
          location: address3.value,
          stopover: false
    })
  };
  
  var address4 = document.getElementById('address4');
  if (address4.value !=""){
    waypts.push({
          location: address4.value,
          stopover: false
    })
  };
  
  var address5 = document.getElementById('address5');
  if (address5.value !=""){
    waypts.push({
          location: address5.value,
          stopover: false
    })
  };
  
  var address6 = document.getElementById('address6');
  if (address6.value !=""){
    waypts.push({
          location: address6.value,
          stopover: false
    })
  };
  //DirectionsService のオブジェクトを生成
  if (document.getElementById('address1').value !="" && document.getElementById('address7').value !=""){
    var directionsService = new google.maps.DirectionsService();
    //DirectionsRenderer のオブジェクトを生成
    var directionsRenderer = new google.maps.DirectionsRenderer();
    //directionsRenderer と地図を紐付け
    directionsRenderer.setMap(map);  
    
    const avoidferries = document.getElementById("avoidferries");
    const avoidhighways = document.getElementById("avoidhighways");
    const avoidtolls = document.getElementById("avoidtolls");
    // ルートを取得するリクエスト
    var request = {
      origin: document.getElementById('address1').value,      // 出発地点
      destination: document.getElementById('address7').value,
      waypoints: waypts,
      travelMode: 'DRIVING',// 到着地点
      avoidFerries: avoidferries.checked,
      avoidHighways: avoidhighways.checked,
      avoidTolls: avoidtolls.checked,
    };
    
    //DirectionsService のオブジェクトのメソッド route() にリクエストを渡し、
    //コールバック関数で結果を setDirections(result) で directionsRenderer にセットして表示
    directionsService.route(request, function(result, status) {
      //ステータスがOKの場合、
      if (status === 'OK') {
        directionsRenderer.setDirections(result); //取得したルート（結果：result）をセット
      }else{
        alert("取得できませんでした：" + status);
      }
    });
  }
}

function loadMap(){
  // geocoderを初期化
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('gmap'), {
  center: {lat: 35.710033, lng: 139.810716 },
  zoom: 8
  });
}

// function codeAddress1(){
//   // 入力を取得
//   let inputAddress = document.getElementById('address1').value;
//   geocoder = new google.maps.Geocoder()

//   // geocodingしたあとmapを移動
//   geocoder.geocode( { 'address': inputAddress}, function(results, status) {
//     if (status == 'OK') {
// 　　　　　　　　　　　　// map.setCenterで地図が移動
//       map.setCenter(results[0].geometry.location);

// 　　　　　　　　　　　　// google.maps.MarkerでGoogleMap上の指定位置にマ��カが立つ
//       var marker = new google.maps.Marker({
//           map: map,
//           position: results[0].geometry.location
//       });
//     } else {
//       alert('Geocode was not successful for the following reason: ' + status);
//     }
//   });
// }

// function codeAddress2(){
//   // 入力を取得
//   let inputAddress = document.getElementById('address2').value;

//   // geocodingしたあとmapを移動
//   geocoder.geocode( { 'address': inputAddress}, function(results, status) {
//     if (status == 'OK') {
// 　　　　　　　　　　　　// map.setCenterで地図が移動
//       map.setCenter(results[0].geometry.location);

// 　　　　　　　　　　　　// google.maps.MarkerでGoogleMap上の指定位置にマ��カが立つ
//       var marker = new google.maps.Marker({
//           map: map,
//           position: results[0].geometry.location
//       });
//     } else {
//       alert('Geocode was not successful for the following reason: ' + status);
//     }
//   });
// }




// var rendererOptions = {
//     suppressMarkers : true
// }
// var directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);
// var directionsService = new google.maps.DirectionsService();

// // 複数地点のルートを検索する
// function search() {
//     // var points = $('#route-list li');

//     // // 2地点以上のとき
//     // if (points.length >= 2){
//     //     var origin; // 開始地点
//     //     var destination; // 終了地点
//     //     var waypoints = []; // 経由地点

//     //     // origin, destination, waypointsを設定する
//     //     for (var i = 0; i < points.length; i++) {
//     //         points[i] = new google.maps.LatLng($(points[i]).attr("data-lat"), $(points[i]).attr("data-lng"));
//     //         if (i == 0){
//     //             origin = points[i];
//     //         } else if (i == points.length-1){
//     //             destination = points[i];
//     //         } else {
//     //             waypoints.push({ location: points[i], stopover: true });
//     //         }
//     //     }
//         // リクエスト作成
//         var request = {
//             origin:      "鹿児島",
//             destination: "宮崎",
//             waypoints: "鹿屋",
//             travelMode:  google.maps.TravelMode.DRIVING
//         };
//         // ルートサービスのリクエスト
//         directionsService.route(request, function(response, status) {
//             if (status == google.maps.DirectionsStatus.OK) {
//                 // 結果を表示する
//                 directionsDisplay.setDirections(response);
//             }
//         });
//     }
// }
</script>
